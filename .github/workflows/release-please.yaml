on:
  push:
    branches:
      - main

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: release-please-action
      - uses: actions/checkout@v3
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v3
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}

      - name: Check release is desired
        id: do-publish
        if: ${{ steps.release.outputs.release_created }}
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "No Token"
          else

            PACKAGE_NAME=$(yarn info -s . name)
            PUBLISHED_VERSION=$(yarn info -s $PACKAGE_NAME version)
            THIS_VERSION=$(node -p "require('./package.json').version")
            # Simple bash helper to comapre version numbers
            verlte() {
              [  "$1" = "`echo -e "$1\n$2" | sort -V | head -n1`" ]
            }
            verlt() {
              [ "$1" = "$2" ] && return 1 || verlte $1 $2
            }
            if verlt $PUBLISHED_VERSION $THIS_VERSION
            then
              echo "Publishing latest"
              echo "tag=latest" >> $GITHUB_OUTPUT
              echo "docs=1" >> $GITHUB_OUTPUT
            else
              echo "Publishing hotfix"
              echo "tag=hotfix" >> $GITHUB_OUTPUT
              echo "docs=0" >> $GITHUB_OUTPUT
            fi

          fi
      - name: Publish to NPM
        if: ${{ steps.do-publish.outputs.tag }}
        run: |
          npm publish --access=public --tag ${{ steps.do-publish.outputs.tag }}
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
